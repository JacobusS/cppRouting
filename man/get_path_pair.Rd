% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_path_pair.R
\name{get_path_pair}
\alias{get_path_pair}
\title{Compute shortest path between origin and destination nodes.}
\usage{
get_path_pair(Graph, from, to, algorithm = "Dijkstra", constant = 1)
}
\arguments{
\item{Graph}{An object generated by cppRouting::makegraph() function.}

\item{from}{A vector of one or more vertices from which shortest paths are calculated (origin).}

\item{to}{A vector of one or more vertices (destination).}

\item{algorithm}{character. "Dijkstra" or "A*"}

\item{constant}{numeric. Constant to maintain the heuristic function admissible. 
Default to 1, when cost is expressed in the same unit than coordinates. See details}
}
\value{
List containing shortest path between from[i] and to[i].
}
\description{
Compute shortest path between origin and destination nodes.
}
\details{
To perform A*, projected coordinates should be provided in the Graph object.  
In A* algorithm, euclidean distance is used as heuristic function.
To understand how A star algorithm work, see https://en.wikipedia.org/wiki/A*_search_algorithm .  
To understand the importance of constant parameter, see the package description : https://github.com/vlarmet/cppRouting .
}
\note{
'from' and 'to' must be the same length.
}
